cmake_minimum_required(VERSION 3.5)
project(plen_ros)

# Default to C++14
if(NOT CMAKE_CXX_STANDARD)
  set(CMAKE_CXX_STANDARD 14)
endif()

# Optional: Add ROS2 include directory (adjust if necessary)
include_directories(/opt/ros/humble/include)

##############################################
## Mirror ROS1 Gazebo configuration settings ##
##############################################
find_package(gazebo REQUIRED)
link_directories(${GAZEBO_LIBRARY_DIRS})
list(APPEND CMAKE_CXX_FLAGS "${GAZEBO_CXX_FLAGS}")

##############################################
## Find ROS2 and other dependencies ##
##############################################
find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(rclpy REQUIRED)
find_package(std_srvs REQUIRED)
find_package(std_msgs REQUIRED)
find_package(geometry_msgs REQUIRED)
find_package(gazebo_ros REQUIRED)
find_package(gazebo_msgs REQUIRED)
find_package(controller_manager_msgs REQUIRED)

##############################################
## Generate messages and services ##
##############################################
rosidl_generate_interfaces(${PROJECT_NAME}
  "msg/RLExperimentInfo.msg"
  "srv/Iterate.srv"
  DEPENDENCIES std_msgs
)

##############################################
## Include directories (add Gazebo include dirs) ##
##############################################
include_directories(
  include
  ${gazebo_ros_INCLUDE_DIRS}
  ${GAZEBO_INCLUDE_DIRS}    # Added from the gazebo package (as in ROS1)
  ${CMAKE_CURRENT_BINARY_DIR}/rosidl_generator_cpp
)

##############################################
## Declare executable and link libraries ##
##############################################
add_executable(gazebo_tools_test src/gazebo_tools_test.cpp)
target_link_libraries(gazebo_tools_test
  ${gazebo_msgs_LIBRARIES}
  ${gazebo_ros_LIBRARIES}
  rclcpp::rclcpp
)

ament_target_dependencies(gazebo_tools_test
  rclcpp
  std_msgs
  std_srvs
  gazebo_ros
  gazebo_msgs
  controller_manager_msgs
  rosidl_default_runtime
)

# Link the generic rosidl typesupport library
rosidl_get_typesupport_target(
  typesupport_target
  "${PROJECT_NAME}"
  "rosidl_typesupport_cpp"
)
target_link_libraries(gazebo_tools_test ${typesupport_target})

##############################################
## Installation directives ##
##############################################
install(TARGETS gazebo_tools_test
  RUNTIME DESTINATION lib/${PROJECT_NAME}
)

install(PROGRAMS
  src/joint_test.py
  src/joint_trajectory_test.py
  src/plen_td3.py
  src/walk_eval.py
  DESTINATION lib/${PROJECT_NAME}
)

# Install meshes, config, URDF, and launch directories
install(DIRECTORY meshes/
  DESTINATION share/${PROJECT_NAME}/meshes
)
install(DIRECTORY config/
  DESTINATION share/${PROJECT_NAME}/config
)
install(DIRECTORY urdf/
  DESTINATION share/${PROJECT_NAME}/urdf
)
install(DIRECTORY launch/
  DESTINATION share/${PROJECT_NAME}/launch
)
install(DIRECTORY include/
  DESTINATION include
  FILES_MATCHING PATTERN "*.h"
)

##############################################
## Finalize package ##
##############################################
ament_export_dependencies(rosidl_default_runtime)
ament_package()

